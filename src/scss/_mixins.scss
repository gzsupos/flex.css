@mixin ie-only() {
  @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
    @content;
  }
}

@mixin firefox-only() {
  @-moz-document url-prefix() {
    @content;
  }
}

@mixin container($gutter: $grid-gutter-width) {
  margin-left: auto;
  margin-right: auto;
  padding-left:  (em($gutter) / 2);
  padding-right: (em($gutter) / 2);
}

@mixin content($columns: $grid-columns, $gutter: $grid-gutter-width) {
  position: relative;
  min-height: 1px;
  padding-right: (em($gutter) / 2);
  padding-left:  (em($gutter) / 2);
  width: 100%;
}

@mixin row($gutter: $grid-gutter-width) {
  display: flex;
  flex-wrap: wrap;
  margin-right: (em($gutter) / -2);
  margin-left: (em($gutter) / -2);
}

@mixin col($size, $columns: $grid-columns) {
  flex: 0 0 percentage($size / $columns);
  width: percentage($size / $columns);
  @include ie-only {
    max-width: percentage($size / $columns);
  }
  @include firefox-only {
    max-width: percentage($size / $columns);
  }
}

@mixin col-offset($size, $columns: $grid-columns) {
  margin-left: percentage($size / $columns);
}

@mixin col-push($size, $columns: $grid-columns) {
  left: if($size > 0, percentage($size / $columns), auto);
}

@mixin col-pull($size, $columns: $grid-columns) {
  right: if($size > 0, percentage($size / $columns), auto);
}

@mixin wall($direction: null) {
  @if (index(directions(), $direction)) {
    border-#{$direction}: em($wall-width) $wall-style $wall-color;
  } @else {
    border: em($wall-width) $wall-style $wall-color;
  }
}

@mixin wall-off($direction: null) {
  @if (index(directions(), $direction)) {
    border-#{$direction}: none;
  } @else {
    border: none;
  }
}

@mixin media($breakpoint, $map: $ranges) {
  @media #{map-get($map, $breakpoint)} {
    @content;
  }
}

@mixin clearfix() {
  &::after {
    display: block;
    clear: both;
    content: ' ';
  }
}
